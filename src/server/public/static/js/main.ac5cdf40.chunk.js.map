{"version":3,"sources":["store/utils/setAuthToken.js","store/actions/authActions.js","store/actions/types.js","store/reducers/authReducer.js","store/reducers/errorReducer.js","store/reducers/todoReducer.js","store/reducers/index.js","store/store.js","components/layout/Landing.js","components/auth/Register.js","components/auth/Login.js","components/layout/Header.js","components/layout/Footer.js","components/todos/Status.js","store/actions/todoActions.js","components/todos/Duedate.js","components/constants.js","components/todos/TodoItem.js","components/todos/AddTodo.js","components/todos/Todos.js","components/private-route/PrivateRoute.js","components/layout/Dashboard.js","components/layout/Profile.js","App.js","serviceWorker.js","index.js"],"names":["setAuthToken","token","axios","defaults","headers","common","setCurrentUser","decoded","type","payload","logoutUser","dispatch","localStorage","removeItem","window","location","replace","isEmpty","require","initialState","isAuthenticated","user","loading","todos","combineReducers","auth","state","action","errors","todoCopy","index","todoItem","status","title","background","slice","duedate","todosCopytoDelete","filter","todo","_id","id","middleware","thunk","store","createStore","rootReducer","compose","applyMiddleware","Landing","className","to","Component","Register","props","onChange","e","setState","target","value","onSubmit","preventDefault","newUser","username","name","email","password","password2","registerUser","history","this","push","noValidate","classnames","invalid","error","placeholder","nextProps","connect","userData","post","then","res","catch","err","response","data","withRouter","Login","loginUser","usernameNotfound","passwordincorrect","setItem","jwt_decode","Header","href","icon","faUserCircle","size","color","faHome","faClipboardList","Footer","Status","handleClickOutside","node","contains","toggleOptions","updateTodoStatus","findIndex","updateStatus","url","URL","searchParams","append","fetch","method","console","log","option","optionsActive","setOption","optionsBackground","renderOptions","optionsArr","options","forEach","key","onClick","document","addEventListener","ref","Duedate","updateTodoDuedate","updateDuedate","handleUpdateDuedate","duedateDate","Date","clearIcon","calendarIcon","date","statusOptions","TodoItem","handleDeleteTodoItem","json","deleteTodo","updateTodoTitle","todoTitle","handleToggleInput","input","isInput","todoContent","onTodoTitleChange","onKeyDown","stopPropagation","onMouseOut","faPen","faTrashAlt","AddTodo","handleAddTodoItem","task","todoBody","userId","body","JSON","stringify","addTodo","isDisabled","userInput","React","createRef","handleIsValid","validUserInput","current","length","currentTarget","reset","disabled","Todos","renderTodoBuckets","statuses","map","buckets","bucket","tempArr","addTodoItem","component","rest","render","Dashboard","onLogoutClick","getLastWeeksTodos","URLSearchParams","set","renderList","pastDue","completed","src","alt","Profile","useSelector","firstLetter","App","jwtToken","currentTime","now","exp","exact","path","Boolean","hostname","match","ReactDOM","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.ac5cdf40.chunk.js","sourcesContent":["import axios from \"axios\";\r\n\r\nconst setAuthToken = token => {\r\n  if (token) {\r\n    // Apply authorization token to every request if logged in\r\n    axios.defaults.headers.common[\"Authorization\"] = token;\r\n  } else {\r\n    // Delete auth header\r\n    delete axios.defaults.headers.common[\"Authorization\"];\r\n  }\r\n};\r\n\r\nexport default setAuthToken;","import axios from \"axios\";\r\nimport setAuthToken from \"../utils/setAuthToken\";\r\nimport jwt_decode from \"jwt-decode\";\r\nimport {\r\n  GET_ERRORS,\r\n  SET_CURRENT_USER,\r\n  USER_LOADING\r\n} from \"./types\";\r\n\r\n// Register User\r\nexport const registerUser = (userData, history) => dispatch => {\r\n  axios\r\n    .post(\"/api/users/register\", userData)\r\n    .then(res => history.push(\"/login\")) // re-direct to login on successful register\r\n    .catch(err =>\r\n      dispatch({\r\n        type: GET_ERRORS,\r\n        payload: err.response.data\r\n      })\r\n    );\r\n};\r\n\r\n// Login - get user token\r\nexport const loginUser = userData => dispatch => {\r\n  axios\r\n    .post(\"/api/users/login\", userData)\r\n    .then(res => {\r\n      // Save to localStorage\r\n      // Set token to localStorage\r\n      const { token } = res.data;\r\n      localStorage.setItem(\"jwtToken\", token);\r\n\r\n      // Set token to Auth header\r\n      setAuthToken(token);\r\n\r\n      // Decode token to get user data\r\n      const decoded = jwt_decode(token);\r\n\r\n      // Set current user\r\n      dispatch(setCurrentUser(decoded));\r\n    })\r\n    .catch(err =>\r\n      dispatch({\r\n        type: GET_ERRORS,\r\n        payload: err.response.data\r\n      })\r\n    );\r\n};\r\n\r\n// Set logged in user\r\nexport const setCurrentUser = decoded => {\r\n  return {\r\n    type: SET_CURRENT_USER,\r\n    payload: decoded\r\n  };\r\n};\r\n\r\n// User loading\r\nexport const setUserLoading = () => {\r\n  return {\r\n    type: USER_LOADING\r\n  };\r\n};\r\n\r\n// Log user out\r\nexport const logoutUser = () => dispatch => {\r\n  // Remove token from local storage\r\n  localStorage.removeItem(\"jwtToken\");\r\n\r\n  // Remove auth header for future requests\r\n  setAuthToken(false);\r\n  window.location.replace('/');\r\n};","export const GET_ERRORS = \"GET_ERRORS\";\r\nexport const USER_LOADING = \"USER_LOADING\";\r\nexport const SET_CURRENT_USER = \"SET_CURRENT_USER\";\r\nexport const SET_TODOS = 'SET_TODOS';\r\nexport const UPDATE_STATUS = 'UPDATE_STATUS';\r\nexport const UPDATE_DUEDATE = 'UPDATE_DUEDATE';\r\nexport const DELETE_TODO = 'DELETE_TODO';\r\nexport const ADD_TODO = 'ADD_TODO';\r\n","import {\r\n  SET_CURRENT_USER,\r\n  USER_LOADING\r\n} from \"../actions/types\";\r\n\r\nconst isEmpty = require(\"is-empty\");\r\n\r\nconst initialState = {\r\n  isAuthenticated: false,\r\n  user: {},\r\n  loading: false\r\n};\r\n\r\nexport default function(state = initialState, action) {\r\n  switch (action.type) {\r\n    case SET_CURRENT_USER:\r\n      return {\r\n        ...state,\r\n        isAuthenticated: !isEmpty(action.payload),\r\n        user: isEmpty(action.payload) ? action.payload : {}\r\n      };\r\n    case USER_LOADING:\r\n      return {\r\n        ...state,\r\n        loading: true\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}","import { GET_ERRORS } from \"../actions/types\";\r\n\r\nconst initialState = {};\r\n\r\nexport default function(state = initialState, action) {\r\n  switch (action.type) {\r\n    case GET_ERRORS:\r\n      return action.payload;\r\n    default:\r\n      return state;\r\n  }\r\n}","import {\r\n  SET_TODOS,\r\n  UPDATE_STATUS,\r\n  UPDATE_DUEDATE,\r\n  DELETE_TODO,\r\n  ADD_TODO\r\n} from \"../actions/types\";\r\n\r\nconst initialState = {\r\n  todos: [],\r\n};\r\n\r\nexport default function(state = initialState, action) {\r\n  let todoCopy = {};\r\n  \r\n  switch (action.type) {\r\n    case SET_TODOS:\r\n      return {\r\n        ...state,\r\n        todos: action.payload\r\n      };\r\n    case UPDATE_STATUS:    \r\n      todoCopy = {\r\n        ...state.todos[action.payload.index]\r\n      };\r\n\r\n      todoCopy.todoItem.status.title = action.payload.title;\r\n      todoCopy.todoItem.status.background = action.payload.background\r\n\r\n      return {\r\n        ...state,\r\n        todos: [\r\n          ...state.todos.slice(0, action.payload.index),\r\n          todoCopy,\r\n          ...state.todos.slice(action.payload.index + 1)\r\n        ]\r\n      }\r\n    case UPDATE_DUEDATE:     \r\n      todoCopy = {\r\n        ...state.todos[action.payload.index]\r\n      };\r\n\r\n      todoCopy.todoItem.duedate = action.payload.duedate;\r\n\r\n      return {\r\n        ...state,\r\n        todos: [\r\n          ...state.todos.slice(0, action.payload.index),\r\n          todoCopy,\r\n          ...state.todos.slice(action.payload.index + 1)\r\n        ]\r\n      }\r\n\r\n    case DELETE_TODO:\r\n      const todosCopytoDelete = [...state.todos];\r\n\r\n      return {\r\n        ...state,\r\n        todos: todosCopytoDelete.filter(todo => todo._id !== action.payload.id)\r\n      }\r\n    case ADD_TODO:\r\n      return {\r\n        ...state,\r\n        todos: [\r\n          action.payload.todo,\r\n          ...state.todos\r\n        ]\r\n      }\r\n    default:\r\n      return state;\r\n  }\r\n}","import { combineReducers } from \"redux\";\r\nimport authReducer from \"./authReducer\";\r\nimport errorReducer from \"./errorReducer\";\r\nimport todoReducer from \"./todoReducer\";\r\n\r\nexport default combineReducers({\r\n  auth: authReducer,\r\n  errors: errorReducer,\r\n  todos: todoReducer\r\n});","import { createStore, applyMiddleware, compose } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport rootReducer from \"./reducers\";\r\n\r\nconst initialState = {};\r\nconst middleware = [thunk];\r\nconst store = createStore(\r\n  rootReducer,\r\n  initialState,\r\n  compose(\r\n    applyMiddleware(...middleware)\r\n  )\r\n);\r\n\r\nexport default store;","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nclass Landing extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"container\">\r\n        <div className=\"row h-100\">\r\n          <div className=\"col-6 offset-3\">\r\n            <div className=\"d-flex h-100\">\r\n              <div className=\"flex-container\">\r\n                <div className=\"card w-100\">\r\n                  <div className=\"card-header\">\r\n                    <h2 className=\"text-center\">Welcome!</h2>\r\n                  </div>\r\n                  <div className=\"card-body text-center\">\r\n                    <Link\r\n                      to=\"/register\"\r\n                      className=\"btn btn-large btn-primary m-2\"\r\n                    >\r\n                      Register\r\n                    </Link>\r\n                    <Link\r\n                      to=\"/login\"\r\n                      className=\"btn btn-large btn-info m-2\"\r\n                    >\r\n                      Log In\r\n                    </Link>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Landing;","import React, { Component } from \"react\";\r\nimport { Link, withRouter } from \"react-router-dom\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport { registerUser } from \"../../store/actions/authActions\";\r\nimport classnames from \"classnames\";\r\n\r\nclass Register extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      username: \"\",\r\n      name: \"\",\r\n      email: \"\",\r\n      password: \"\",\r\n      password2: \"\",\r\n      errors: {}\r\n    };\r\n  }\r\n\r\n  static getDerivedStateFromProps(nextProps){\r\n    if (nextProps.errors) {\r\n      return { errors: nextProps.errors } \r\n    }\r\n\r\n    return null;\r\n  }\r\n\r\n  componentDidMount() {\r\n    // If logged in and user navigates to Register page, should redirect them to dashboard\r\n    if (this.props.auth.isAuthenticated) {\r\n      this.props.history.push(\"/dashboard\");\r\n    }\r\n  }\r\n\r\n  componentDidUpdate() {\r\n    if (this.props.auth.isAuthenticated) {\r\n      this.props.history.push(\"/dashboard\");\r\n    }\r\n  }\r\n\r\n  onChange = e => {\r\n    this.setState({ [e.target.id]: e.target.value });\r\n  };\r\n\r\n  onSubmit = e => {\r\n    e.preventDefault();\r\n    \r\n    const newUser = {\r\n      username: this.state.username,\r\n      name: this.state.name,\r\n      email: this.state.email,\r\n      password: this.state.password,\r\n      password2: this.state.password2\r\n    };\r\n    \r\n    this.props.registerUser(newUser, this.props.history); \r\n  };\r\n\r\n  render() {\r\n    const { errors } = this.state;\r\n    \r\n    return (\r\n      <div className=\"row h-100\">\r\n        <div className=\"col-10 offset-1 col-md-6 offset-md-3 col-xl-4 offset-xl-4 text-center\">\r\n          <div className=\"d-flex h-100\">\r\n            <div className=\"flex-container\">\r\n              <div className=\"card w-100\">\r\n                <div className=\"card-body\">\r\n                  <Link to=\"/\" className=\"btn-flat waves-effect\">Back to home</Link>\r\n                  <div className=\"col-12\">\r\n                    <h4>Register below</h4>\r\n                    <p className=\"grey-text text-darken-1\">\r\n                      Already have an account? <Link to=\"/login\">Log in</Link>\r\n                    </p>\r\n                  </div>\r\n                  <form noValidate onSubmit={this.onSubmit}>\r\n                    <div className=\"form-group\">\r\n                      <input\r\n                        className={classnames(\"form-control\", \"mb-2\", {\r\n                          invalid: errors.username\r\n                        })}\r\n                        onChange={this.onChange}\r\n                        value={this.state.username}\r\n                        error={errors.username}\r\n                        id=\"username\"\r\n                        type=\"text\"\r\n                        placeholder=\"Username\"\r\n                      />\r\n                      <input\r\n                        className={classnames(\"form-control\", \"mb-2\", {\r\n                          invalid: errors.name\r\n                        })}\r\n                        onChange={this.onChange}\r\n                        value={this.state.name}\r\n                        error={errors.name}\r\n                        id=\"name\"\r\n                        type=\"text\"\r\n                        placeholder=\"Name\"\r\n                      />\r\n                      <input\r\n                        className={classnames(\"form-control\", \"mb-2\", {\r\n                          invalid: errors.email\r\n                        })}\r\n                        onChange={this.onChange}\r\n                        value={this.state.email}\r\n                        error={errors.email}\r\n                        id=\"email\"\r\n                        type=\"email\"\r\n                        placeholder=\"Email\"\r\n                      />\r\n                      <input\r\n                        className={classnames(\"form-control\", \"mb-2\", {\r\n                          invalid: errors.password\r\n                        })}\r\n                        onChange={this.onChange}\r\n                        value={this.state.password}\r\n                        error={errors.password}\r\n                        id=\"password\"\r\n                        type=\"password\"\r\n                        placeholder=\"Password\"\r\n                      />\r\n                      <input\r\n                        className={classnames(\"form-control\", \"mb-2\", {\r\n                          invalid: errors.password2\r\n                        })}\r\n                        onChange={this.onChange}\r\n                        value={this.state.password2}\r\n                        error={errors.password2}\r\n                        id=\"password2\"\r\n                        type=\"password\"\r\n                        placeholder=\"Confirm Password\"\r\n                      />\r\n                      <span className=\"text-danger\">{ errors.password2 }</span>\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                      <button\r\n                        type=\"submit\"\r\n                        className=\"btn btn-large btn-info\"\r\n                      >\r\n                        Sign up\r\n                      </button>\r\n                    </div>\r\n                  </form>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nRegister.propTypes = {\r\n  registerUser: PropTypes.func.isRequired,\r\n  auth: PropTypes.object.isRequired,\r\n  errors: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  auth: state.auth,\r\n  errors: state.errors\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { registerUser }\r\n)(withRouter(Register));","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport { loginUser } from \"../../store/actions/authActions\";\r\nimport classnames from \"classnames\";\r\n\r\nclass Login extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      username: \"\",\r\n      password: \"\",\r\n      errors: {}\r\n    };\r\n  }\r\n\r\n  static getDerivedStateFromProps(nextProps){\r\n    if (nextProps.errors) {\r\n      return { errors: nextProps.errors } \r\n    }\r\n\r\n    return null;\r\n  }\r\n\r\n  componentDidMount() {\r\n    // If logged in and user navigates to Register page, should redirect them to dashboard\r\n    if (this.props.auth.isAuthenticated) {\r\n      this.props.history.push(\"/dashboard\");\r\n    }\r\n  }\r\n\r\n  componentDidUpdate() {\r\n    if (this.props.auth.isAuthenticated) {\r\n      this.props.history.push(\"/dashboard\"); // push user to dashboard when they login\r\n    }\r\n  }\r\n\r\n  onChange = e => {\r\n    this.setState({ [e.target.id]: e.target.value });\r\n  };\r\n\r\n  onSubmit = e => {\r\n    e.preventDefault();\r\n\r\n    const userData = {\r\n      username: this.state.username,\r\n      password: this.state.password\r\n    };\r\n\r\n    // since we handle the redirect within our component \r\n    // we don't need to pass in this.props.history as a parameter\r\n    this.props.loginUser(userData);\r\n  };\r\n\r\n  render() {\r\n    const { errors } = this.state;\r\n\r\n    return (\r\n        <div className=\"row h-100\">\r\n          <div className=\"col-10 offset-1 col-md-6 offset-md-3 col-xl-4 offset-xl-4 text-center\">\r\n            <div className=\"d-flex h-100\">\r\n              <div className=\"flex-container\">\r\n                <div className=\"card w-100\">\r\n                  <div className=\"card-body\">\r\n                    <Link to=\"/\" className=\"btn-flat waves-effect\">Back to home</Link>\r\n                    <div className=\"col-12\">\r\n                      <h4>Login below</h4>\r\n                      <p className=\"text-secondary text-darken-1\">\r\n                        Don't have an account? <Link to=\"/register\">Register</Link>\r\n                      </p>\r\n                    </div>\r\n                    <form noValidate onSubmit={this.onSubmit}>\r\n                      <div className=\"form-group\">\r\n                        <input\r\n                          className={classnames(\"form-control\", \"mb-2\", {\r\n                            invalid: errors.usernameNotfound\r\n                          })}\r\n                          onChange={this.onChange}\r\n                          value={this.state.username}\r\n                          error={errors.username}\r\n                          id=\"username\"\r\n                          type=\"text\"\r\n                          placeholder=\"Username\"\r\n                        />\r\n                        <span className=\"red-text\">\r\n                          {errors.usernameNotfound}\r\n                        </span>\r\n                        <input\r\n                          className={classnames(\"form-control\", {\r\n                            invalid: errors.password || errors.passwordincorrect\r\n                          })}\r\n                          onChange={this.onChange}\r\n                          value={this.state.password}\r\n                          error={errors.password}\r\n                          id=\"password\"\r\n                          type=\"password\"\r\n                          placeholder=\"Password\"\r\n                        />\r\n                        <span className=\"red-text\">\r\n                          {errors.password}\r\n                          {errors.passwordincorrect}\r\n                        </span>\r\n                      </div>\r\n                      <div className=\"form-group text-center\">\r\n                        <button\r\n                          type=\"submit\"\r\n                          className=\"btn btn-large btn-info\"\r\n                        >\r\n                          Login\r\n                        </button>\r\n                      </div>\r\n                    </form>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n    );\r\n  }\r\n}\r\n\r\nLogin.propTypes = {\r\n  loginUser: PropTypes.func.isRequired,\r\n  auth: PropTypes.object.isRequired,\r\n  errors: PropTypes.any.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  auth: state.auth,\r\n  errors: state.errors\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { loginUser }\r\n)(Login);","import React from 'react'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faClipboardList, faUserCircle, faHome } from '@fortawesome/free-solid-svg-icons';\r\n\r\nfunction Header() {\r\n  return (\r\n    <div className=\"heading h-100 w-100 text-center d-flex\">\r\n      <nav className=\"w-100 bg-secondary flex-container\">\r\n        <a href=\"profile\" className=\"profile-nav custom-nav-link hide-mobile my-2\">\r\n          <FontAwesomeIcon \r\n            icon={faUserCircle} \r\n            size=\"2x\" \r\n            color=\"white\" \r\n            className=\"pointer\" \r\n          />\r\n        </a>\r\n        <div className=\"text-white right-0\">\r\n          <a href=\"profile\" className=\"profile-nav hide-desktop custom-nav-link my-2\">\r\n            <FontAwesomeIcon \r\n              icon={faUserCircle} \r\n              size=\"2x\" \r\n              color=\"white\" \r\n              className=\"pointer\" \r\n            />\r\n          </a>\r\n          <a href=\"/dashboard\" className=\"custom-nav-link m-2\">\r\n            <FontAwesomeIcon \r\n              icon={faHome} \r\n              size=\"2x\" \r\n              color=\"white\" \r\n              className=\"pointer\" \r\n            />\r\n          </a>\r\n          <a href=\"/todos\" className=\"custom-nav-link my-2\">\r\n            <FontAwesomeIcon \r\n              icon={faClipboardList} \r\n              size=\"2x\" \r\n              color=\"white\" \r\n              className=\"pointer\" \r\n            />\r\n          </a>\r\n        </div>\r\n      </nav>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Header\r\n","import React from \"react\";\r\n\r\nconst Footer = () => {\r\n  return (\r\n    <footer id=\"sticky-footer\" className=\"page-footer font-small bg-dark py-3\">\r\n      <div className=\"footer-copyright text-center text-white\">\r\n        <strong>© 2020 Copyright: RS</strong>\r\n      </div>\r\n  </footer>\r\n  )\r\n}\r\n\r\nexport default Footer;","import React, { Component } from 'react'\r\nimport store from \"../../store/store\";\r\nimport { updateStatus } from '../../store/actions/todoActions';\r\nimport { connect } from 'react-redux';\r\n\r\nclass Status extends Component {\r\n  constructor(props){\r\n    super(props);\r\n\r\n    this.state = {\r\n      status: props.status.title || '-',\r\n      options: props.options,\r\n      optionsActive: false,\r\n      optionsBackground: props.status.background,\r\n      id: props.id\r\n    }\r\n  }\r\n\r\n  componentWillMount() {\r\n    document.addEventListener('mousedown', this.handleClickOutside, false);\r\n  }\r\n  \r\n  componentWillUnmount() {\r\n    document.addEventListener('mousedown', this.handleClickOutside, false);\r\n  }\r\n\r\n  handleClickOutside = (e) => {\r\n    if (this.node.contains(e.target)) {\r\n      return;\r\n    }\r\n\r\n    this.toggleOptions(false);\r\n  }\r\n\r\n  //Adds current id passed from TodoItem parent and status of current todoItem in passed into function and sends a put request to the database to update information\r\n  updateTodoStatus = (title, background) => {\r\n    // update status for active todo in global todos state\r\n    const index = this.props.todos.findIndex(todo => todo._id === this.state.id);\r\n    store.dispatch(updateStatus(index, title, background));\r\n\r\n    const url = new URL('/api/todos/edit-status');\r\n    // Adding parameters to url\r\n    url.searchParams.append('id', this.state.id);\r\n    url.searchParams.append('title', title);\r\n    url.searchParams.append('background', background);\r\n\r\n    fetch(url, {\r\n      method: 'PUT'\r\n    })\r\n      .then(response => response)\r\n      .catch(error => {\r\n        console.log(error);\r\n      });\r\n  }\r\n\r\n  toggleOptions = (option) => {\r\n    this.setState({optionsActive: option});\r\n  }\r\n\r\n  setOption = (option) => {\r\n    this.setState({status: option.title});\r\n    this.setState({optionsBackground: option.background});\r\n    this.setState({optionsActive: false});\r\n\r\n    this.updateTodoStatus(option.title, option.background);\r\n  }\r\n\r\n  renderOptions = () => {\r\n    let optionsArr = [];\r\n\r\n    this.state.options.forEach(option => {\r\n      optionsArr.push(<div className={`overlay status-option bg-${option.background}`} key={option.title} onClick={() => this.setOption(option)}>{option.title}</div>)\r\n    });\r\n\r\n    return optionsArr;\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"position-relative h-100 status\" ref={node => this.node = node}>\r\n        <div onClick={e => this.toggleOptions(true)} className={`w-100 h-100 text-center status-overlay bg-${this.state.optionsBackground} ${this.state.optionsActive ? \"hidden\" : \"\"}`}>{ this.state.status }</div>\r\n        <div className={`status-options ${this.state.optionsActive ? \"\" : \"hidden\"}`}>\r\n          {this.renderOptions()}\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n  \r\n}\r\n\r\n// setting state for app\r\nconst mapStateToProps = state => ({\r\n  todos: state.todos.todos\r\n});\r\n\r\nexport default connect(mapStateToProps, {})(Status);\r\n","import { \r\n  SET_TODOS, \r\n  UPDATE_STATUS, \r\n  UPDATE_DUEDATE, \r\n  DELETE_TODO,\r\n  ADD_TODO  \r\n} from \"./types\";\r\n\r\n// Set logged in user\r\nexport const getTodos = (id) => dispatch => {\r\n  const url = new URL('/api/todos');\r\n  let todoItems = [];\r\n  url.searchParams.append('userId', id);\r\n\r\n  fetch(url, {\r\n    method: 'GET'\r\n  })\r\n    .then(res => res.json())\r\n    .then(todos => {\r\n      todoItems = todos;\r\n      dispatch({\r\n        type: SET_TODOS,\r\n        payload: todoItems\r\n      });\r\n    })\r\n    .catch(error => {\r\n      console.log(error);\r\n    });\r\n};\r\n\r\nexport const updateStatus = (index, title, background) => {\r\n  const payload = {\r\n    index,\r\n    title,\r\n    background\r\n  }\r\n\r\n  return {\r\n    type: UPDATE_STATUS,\r\n    payload\r\n  }\r\n}\r\n\r\nexport const deleteTodo = (id) => {\r\n  const payload = {\r\n    id\r\n  }\r\n\r\n  return {\r\n    type: DELETE_TODO,\r\n    payload \r\n  }\r\n}\r\n\r\nexport const updateDuedate = (index, duedate) => {\r\n  const payload = {\r\n    index,\r\n    duedate\r\n  }\r\n\r\n  return {\r\n    type: UPDATE_DUEDATE,\r\n    payload \r\n  }\r\n}\r\n\r\nexport const addTodo = (todo) => {\r\n  const payload = {\r\n    todo\r\n  }\r\n\r\n  return {\r\n    type: ADD_TODO,\r\n    payload\r\n  }\r\n}","import React, { Component } from 'react'\r\nimport store from \"../../store/store\";\r\nimport { updateDuedate } from '../../store/actions/todoActions';\r\nimport { connect } from 'react-redux';\r\nimport DatePicker from 'react-date-picker';\r\n\r\nclass Duedate extends Component {\r\n  constructor(props){\r\n    super(props);\r\n\r\n    this.state = {\r\n      duedate: props.duedate,\r\n      id: props.id\r\n    }\r\n  }\r\n\r\n  updateTodoDuedate = duedate => {\r\n    const index = this.props.todos.findIndex(todo => todo._id === this.state.id);\r\n    store.dispatch(updateDuedate(index, duedate));\r\n  \r\n    const url = new URL('/api/todos/edit-duedate');\r\n    // Adding parameters to url\r\n    url.searchParams.append('id', this.state.id);\r\n    url.searchParams.append('duedate', duedate);\r\n  \r\n    fetch(url, {\r\n      method: 'PUT'\r\n    })\r\n      .then(response => response)\r\n      .catch(error => {\r\n        console.log(error);\r\n      });\r\n  }\r\n\r\n  handleUpdateDuedate = duedate => {\r\n    this.setState({duedate});\r\n  }\r\n\r\n  render() {\r\n    let duedateDate;\r\n    \r\n    // Handling in case there is no duedate assigned\r\n    if (this.state.duedate === \"\") {\r\n      duedateDate=\"\";\r\n    } else {\r\n      duedateDate=new Date(this.state.duedate);\r\n    }\r\n\r\n    return (\r\n      <DatePicker\r\n        value={duedateDate}\r\n        clearIcon={null}\r\n        calendarIcon={null}\r\n        className=\"date-picker\"\r\n        onChange={date => { this.handleUpdateDuedate(date);  this.updateTodoDuedate(date)}}\r\n      /> \r\n    )\r\n  }\r\n\r\n\r\n\r\n}\r\n\r\n// setting state for app\r\nconst mapStateToProps = state => ({\r\n  todos: state.todos.todos\r\n});\r\n\r\nexport default connect(mapStateToProps, {})(Duedate);","export const statusOptions = [\r\n  {\r\n    title: '-',\r\n    background: 'light'\r\n  },\r\n  {\r\n    title: 'in progress',\r\n    background: 'primary'\r\n  },\r\n  {\r\n    title: 'complete',\r\n    background: 'success'\r\n  }\r\n];","import React, {Component} from 'react'\r\nimport { connect } from 'react-redux';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faTrashAlt, faPen} from '@fortawesome/free-solid-svg-icons';\r\n//import DatePicker from 'react-date-picker';\r\nimport Status from './Status';\r\nimport Duedate from './Duedate';\r\nimport './TodoItem.scss';\r\nimport PropTypes from 'prop-types';\r\nimport store from \"../../store/store\";\r\nimport { deleteTodo } from '../../store/actions/todoActions';\r\nimport { statusOptions } from '../constants';\r\n\r\nclass TodoItem extends Component {\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n      todoTitle: props.todo.todoItem.title,\r\n      isInput: false,\r\n      duedate: props.todo.todoItem.duedate,\r\n      status: props.todo.todoItem.status || '-',\r\n    }\r\n  }\r\n\r\n  handleDeleteTodoItem = (id) => {\r\n    const url = new URL('/api/todos/delete');\r\n\r\n    // Adding parameters to url\r\n    url.searchParams.append('id', id);\r\n\r\n    // Sending call to api \r\n    fetch(url, {method: 'PUT'})\r\n      .then(res => res.json())\r\n      .then(() => {\r\n        // update status for active todo in global todos state\r\n        store.dispatch(deleteTodo(this.props.todo._id))\r\n      })\r\n      .catch(error => {\r\n        console.log(error);\r\n      });\r\n  }\r\n\r\n  //Adds current id and title of current todoItem in local state and sends a put request to the database to update information\r\n  updateTodoTitle = () => {\r\n    const url = new URL('/api/todos/edit-title');\r\n    // Adding parameters to url\r\n    url.searchParams.append('id', this.props.todo._id);\r\n    url.searchParams.append('todoTitle', this.state.todoTitle);\r\n\r\n    fetch(url, {\r\n      method: 'PUT'\r\n    })\r\n      .then(response => response)\r\n      .catch(error => {\r\n        console.log(error);\r\n      });\r\n  }\r\n\r\n  //Adds current id and duedate of current todoItem in local state and sends a put request to the database to update information\r\n  updateTodoDuedate = () => {\r\n    const url = new URL('/api/todos/edit-duedate');\r\n    // Adding parameters to url\r\n    url.searchParams.append('id', this.props.todo._id);\r\n    url.searchParams.append('duedate', this.state.duedate);\r\n\r\n    fetch(url, {\r\n      method: 'PUT'\r\n    })\r\n      .then(response => response)\r\n      .catch(error => {\r\n        console.log(error);\r\n      });\r\n  }\r\n\r\n  onTodoTitleChange(value) {\r\n    this.setState({\r\n      todoTitle: value\r\n    });\r\n  }\r\n\r\n  //When the edit svg is clicked, it keeps track of that click in local state to enable/disable input and fires off updateTodoTitle()\r\n  handleToggleInput = () => {\r\n    let input = this.state.isInput;\r\n\r\n    this.setState({\r\n      isInput: !this.state.isInput\r\n    });\r\n\r\n    input = !input;\r\n    \r\n    if (!input) {\r\n      this.updateTodoTitle();\r\n    }\r\n  }\r\n  \r\n  render(){\r\n    // User destructuring to grab todo item and deleteTodo method\r\n    const { todo } = this.props;\r\n    let todoContent;\r\n    \r\n    const handleEnterKey = (e) => {\r\n      if (e.key === 'Enter') {\r\n        e.preventDefault();\r\n        e.stopPropagation();\r\n  \r\n        this.handleToggleInput();\r\n      }\r\n    }\r\n\r\n    if (this.state.isInput) {\r\n      todoContent \r\n        = <input \r\n            className={`w-100 todo-item .text-truncate d-block form-control border-0`} \r\n            value={this.state.todoTitle} \r\n            onChange={e => this.onTodoTitleChange(e.target.value)} \r\n            onKeyDown={handleEnterKey}\r\n            onMouseOut={e => this.handleToggleInput()}\r\n          />;\r\n    } else {\r\n      todoContent = <p className={`w-100 todo-item .text-truncate d-block form-control border-0`}>{this.state.todoTitle}</p>\r\n    }\r\n\r\n    return (\r\n      <div className=\"clearfix todo\">\r\n        <div className=\"row\">\r\n          <div className=\"col-5 col-lg-7\">\r\n            <div className=\"has-overlay w-100\">\r\n              <div className={`overlay h-100 ${this.state.isInput ? 'd-none':'d-block'}`}>\r\n                <FontAwesomeIcon \r\n                  icon={faPen} \r\n                  size=\"sm\" \r\n                  color=\"secondary\"  \r\n                  className=\"pointer position-absolute img-fluid hover-icon\"\r\n                  onClick={this.handleToggleInput}\r\n                />\r\n              </div>\r\n              {todoContent}\r\n            </div>\r\n          </div>\r\n          <div className=\"col-3 col-lg-2 h-100 my-auto\">\r\n            <Status \r\n              status={this.state.status} options={statusOptions} id={todo._id}\r\n            />\r\n          </div>\r\n          <div className=\"col-3 col-lg-2 px-0 my-auto d-flex\">\r\n            <div className=\"flex-center w-100\">\r\n              <Duedate \r\n                duedate={this.state.duedate} id={todo._id}\r\n              />  \r\n            </div>\r\n          </div>\r\n          <div className=\"col-1 ml-auto d-block\">\r\n            <FontAwesomeIcon \r\n              icon={faTrashAlt} \r\n              size=\"lg\" \r\n              color=\"danger\" \r\n              className=\"float-right text-danger pointer m-2 pr-1\"\r\n              onClick={() => this.handleDeleteTodoItem(todo._id)}\r\n            />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nTodoItem.propTypes = {\r\n  todo: PropTypes.object.isRequired, \r\n}\r\n\r\n// setting state for app\r\nconst mapStateToProps = state => ({\r\n  todos: state.todos.todos\r\n});\r\n\r\nexport default connect(mapStateToProps, {})(TodoItem);\r\n","import React, {Component} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from \"react-redux\";\r\nimport store from \"../../store/store\";\r\nimport { addTodo } from '../../store/actions/todoActions';\r\n\r\nclass AddTodo extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      isDisabled: true\r\n    };\r\n  }\r\n\r\n  // TODO move this to AddTodo component\r\n  handleAddTodoItem = (task) => {\r\n    // Setting up base url for api call\r\n    const url = new URL('/api/todos/add');\r\n    const todoBody = {\r\n      task,\r\n      userId: this.props.userId\r\n    }\r\n\r\n    // Sending call to api\r\n    fetch(url, {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n      body: JSON.stringify(todoBody)\r\n    })\r\n      .then(res => res.json())\r\n      .then((todo) => {\r\n        // update status for active todo in global todos state\r\n        store.dispatch(addTodo(todo))\r\n      })\r\n      .catch(error => {\r\n        console.log(error);\r\n      });\r\n  }\r\n\r\n  render(){\r\n    let userInput = React.createRef();\r\n\r\n    const handleIsValid = () => {\r\n      let validUserInput = userInput.current.value;\r\n      \r\n      if(validUserInput.length <= 3){\r\n        this.setState({ isDisabled: true });\r\n      }\r\n      else if(validUserInput.length > 3){\r\n        this.setState({ isDisabled: false });\r\n      } \r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n      e.preventDefault();\r\n      this.handleAddTodoItem(userInput.current.value);\r\n      e.currentTarget.reset();\r\n      handleIsValid();\r\n    }\r\n\r\n    return (\r\n      <form className=\"w-100\" onSubmit={handleSubmit} onChange={handleIsValid}>\r\n        <div className=\"row\">\r\n          <div className=\"col-12 col-md-10 mb-2\">\r\n            <div className=\"mx-3 mx-sm-0\">\r\n              <input \r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                ref={userInput}\r\n                placeholder=\"Enter a new task\" \r\n              />\r\n            </div>\r\n          </div>\r\n          <div className=\"col-12 col-md-2 mb-2\">\r\n            <div className=\"mx-3 mx-sm-0\">\r\n              <button\r\n                className={`w-100 btn btn-info ${this.state.isDisabled ? 'disabled' : ''}`}\r\n                type=\"submit\"\r\n                value=\"Add task\"\r\n                disabled={this.state.isDisabled}\r\n              >\r\n                Add Task\r\n              </button>  \r\n            </div>\r\n          </div>\r\n        </div>\r\n      </form>\r\n    )\r\n  }\r\n}\r\n\r\nAddTodo.propTypes = {\r\n  userInput: PropTypes.string\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  userId: state.auth.user.username\r\n});\r\n\r\nexport default connect(mapStateToProps)(AddTodo)\r\n\r\n","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux';\r\nimport TodoItem from './TodoItem';\r\nimport './Todos.scss';\r\nimport AddTodo from './AddTodo';\r\nimport store from \"../../store/store\";\r\nimport { statusOptions } from '../constants';\r\nimport { getTodos } from '../../store/actions/todoActions';\r\n\r\nclass Todos extends Component {\r\n  state = {\r\n    userId: '',\r\n    todos: []\r\n  }\r\n\r\n  componentDidMount() {\r\n    store.dispatch(getTodos(this.props.userId));\r\n  } \r\n\r\n  renderTodoBuckets = () => {\r\n    const statuses = statusOptions.map(status => status.title);\r\n    const buckets = [];\r\n    const todos = [];\r\n\r\n    statuses.forEach((status) => {\r\n      buckets.push(this.props.todos.filter((todo) => todo.todoItem.status.title === status))\r\n    });\r\n    \r\n    buckets.forEach((bucket) => {\r\n      if (bucket.length) {\r\n        let tempArr = [];\r\n        // build temp array holding current buckets todos\r\n        bucket.forEach((todo) => {\r\n          tempArr.push(<TodoItem key={todo.todoItem.id} todo={todo}/>);\r\n        })\r\n\r\n        // Build markup for bucket\r\n        todos.push(\r\n          <div className=\"row\" key={bucket[0].todoItem.id}>\r\n            <div className=\"mx-3 mx-sm-0 w-100\">\r\n              <div className=\"row\">\r\n                <div className=\"mx-3 mx-sm-0 w-100\">\r\n                  <div className=\"row\">\r\n                    <div className=\"col-5 col-lg-7\">\r\n                      <p className=\"todo-header capitalize\">\r\n                        {bucket[0].todoItem.status.title === '-' ? 'Todo' : bucket[0].todoItem.status.title}\r\n                      </p>\r\n                    </div>\r\n                    <div className=\"col-3 col-lg-2 px-0 h-100 my-auto\">\r\n                      <p className=\"todo-header rounded-header left\">Status</p>\r\n                    </div>\r\n                    <div className=\"col-3 col-lg-2 px-0 my-auto d-block\">\r\n                      <p className=\"todo-header rounded-header right\">Due Date</p>\r\n                    </div>\r\n                    <div className=\"col-1 ml-auto d-block\"></div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              {\r\n                // place the temp array with current buckets todos\r\n                tempArr\r\n              }\r\n            </div>\r\n          </div>\r\n        )\r\n        tempArr = [];\r\n      }\r\n    });\r\n\r\n    return todos;\r\n  }\r\n\r\n  // render the component\r\n  render() {\r\n    return (\r\n      <div>\r\n        <div className=\"py-3 text-center\">\r\n          <h1 className=\"mb-0 pb-0\">TODOS</h1> \r\n        </div>\r\n        <div className=\"container\">\r\n          <div className=\"row\">\r\n            <AddTodo addTodoItem={this.handleAddTodoItem} user={this.state.userId}/>\r\n          </div>\r\n          {\r\n            this.renderTodoBuckets()\r\n          }\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\n// setting state for app\r\nconst mapStateToProps = state => ({\r\n  userId: state.auth.user.username,\r\n  todos: state.todos.todos\r\n});\r\n\r\nexport default connect(mapStateToProps, {})(Todos);","import React from \"react\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\nconst PrivateRoute = ({ component: Component, auth, ...rest }) => (\r\n  <Route\r\n    {...rest}\r\n    render={props =>\r\n      auth.isAuthenticated === true ? (\r\n        <Component {...props} />\r\n      ) : (\r\n        <Redirect to=\"/login\" />\r\n      )\r\n    }\r\n  />\r\n);\r\nPrivateRoute.propTypes = {\r\n  auth: PropTypes.object.isRequired\r\n};\r\nconst mapStateToProps = state => ({\r\n  auth: state.auth\r\n});\r\nexport default connect(mapStateToProps)(PrivateRoute);","import React, { Component } from \"react\";\r\nimport path from 'path';\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport { logoutUser } from \"../../store/actions/authActions\";\r\n\r\nclass Dashboard extends Component {\r\n  state = {\r\n    todos: {}\r\n  }\r\n\r\n  onLogoutClick = e => {\r\n    e.preventDefault();\r\n    logoutUser();\r\n  };\r\n\r\n  getLastWeeksTodos = (id) => {\r\n    const searchParams = new URLSearchParams();\r\n    searchParams.set('userId', id);\r\n\r\n    fetch('/api/todos/last-week', {\r\n      method: 'GET',\r\n      searchParams\r\n    })\r\n      .then(res => res.json())\r\n      .then(todos => {\r\n        this.setState({'todos': todos});\r\n      })\r\n      .catch(error => {\r\n        console.log(error);\r\n      });\r\n  }\r\n\r\n  renderList = (name) => {\r\n    const todos = [];\r\n\r\n    if (this.state.todos[name]) {\r\n      this.state.todos[name].forEach(todo => {\r\n       todos.push(<li className=\"list-group-item\" key={todo.todoItem.id}>{todo.todoItem.title}</li>)\r\n      });\r\n    }\r\n\r\n    return todos;\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.getLastWeeksTodos(this.props.auth.user.username);\r\n  }\r\n\r\n  render() {\r\n    const { user } = this.props.auth;\r\n\r\n    let pastDue = this.state.todos.pastDue;\r\n    let completed = this.state.todos.completed;\r\n\r\n    if (pastDue) pastDue = pastDue.length;\r\n    if (completed) completed = completed.length;\r\n\r\n    return (\r\n      <div className=\"container\">\r\n        <div className=\"flex-container\">\r\n          <div className=\"w-100\">\r\n            <div className=\"row mb-4\">\r\n              <h3 className=\"text-center w-100\">Hello {user.name}, Here's last week at a glance:</h3>\r\n            </div>\r\n            <div className=\"row mb-4\">\r\n              <div className=\"col-12 col-md-6 d-flex align-items-stretch\">\r\n                <div className=\"card\">\r\n                  <img className=\"card-img-top\" src=\"completed.jpg\" alt=\"image\" />\r\n                  <div className=\"card-body text-center\">\r\n                    <h5 className=\"card-title\">{`${completed} ${completed > 1 ? 'Tasks' : 'Task'}`} completed</h5>\r\n                    <p className=\"card-text\">Nice going! You were able to complete 7 out of the 8 tasks you created.</p>\r\n                    <ul className=\"list-group\">\r\n                     {this.renderList('completed')}\r\n                    </ul>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div className=\"col-12 col-md-6 d-flex align-items-stretch\">\r\n                <div className=\"card\">\r\n                  <img className=\"card-img-top\" src=\"past-due.jpg\" alt=\"image\" />\r\n                  <div className=\"card-body text-center\">\r\n                    <h5 className=\"card-title\">{`${pastDue} ${pastDue > 1 ? 'Tasks' : 'Task'}`} Overdue</h5>\r\n                    <p className=\"card-text\">We can't always get to things on time, that's okay! Time to reschedule.</p>\r\n                    <ul className=\"list-group\">\r\n                      {this.renderList('pastDue')}\r\n                    </ul>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>           \r\n            <div className=\"row d-flex justify-content-center mt-3\">\r\n              <a href=\"/todos\" className=\"btn btn-info text-center mx-2\">Go to Tasks</a>\r\n              <button className=\"btn btn-warning text-center mx-2\" onClick={logoutUser()}>Logout</button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nDashboard.propTypes = {\r\n  logoutUser: PropTypes.func.isRequired,\r\n  auth: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  auth: state.auth\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { logoutUser }\r\n)(Dashboard);","import React from 'react'\r\nimport { useSelector } from 'react-redux';\r\nimport './Profile.scss'\r\n\r\nexport default function Profile() {\r\n  const { name, username } = useSelector(state => state.auth.user);\r\n  const firstLetter = username.slice(0, 1);\r\n  console.log(firstLetter);\r\n  return (\r\n    <div className=\"h-100\">\r\n      <div className=\"container\">\r\n        <div className=\"row h-100\">\r\n          <div className=\"col-lg-4 offset-lg-4 col-md-6 offset-md-3\">\r\n            <div className=\"d-flex justify-content-center align-items-center h-100\">\r\n              <div className=\"card p-3 shadow-lg\">\r\n                <div className=\"card-body\">\r\n                  <div className=\"profile-round d-flex justify-content-center align-items-center\">\r\n                    {firstLetter}\r\n                  </div>\r\n                  <div className=\"card-title text-center\">\r\n                    <h5>{username}</h5>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\n","import React from 'react';\r\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\r\nimport jwt_decode from \"jwt-decode\";\r\nimport setAuthToken from \"./store/utils/setAuthToken\";\r\nimport { setCurrentUser, logoutUser } from \"./store/actions/authActions\";\r\n\r\nimport { Provider } from \"react-redux\";\r\nimport store from \"./store/store\";\r\n\r\nimport Landing from './components/layout/Landing';\r\nimport Register from './components/auth/Register';\r\nimport Login from './components/auth/Login';\r\nimport Header from './components/layout/Header';\r\nimport Footer from './components/layout/Footer';\r\nimport Todos from './components/todos/Todos';\r\nimport PrivateRoute from \"./components/private-route/PrivateRoute\";\r\nimport Dashboard from \"./components/layout/Dashboard\";\r\nimport Profile from \"./components/layout/Profile\";\r\n\r\nfunction App() {\r\n  // Check for token to keep user logged in\r\n  if (localStorage.jwtToken) {\r\n    // Set auth token header auth\r\n    const token = localStorage.jwtToken;\r\n    setAuthToken(token);\r\n\r\n    // Decode token and get user info and exp\r\n    const decoded = jwt_decode(token);\r\n\r\n    // Set user and isAuthenticated\r\n    store.dispatch(setCurrentUser(decoded));\r\n\r\n    // Check for expired token\r\n    const currentTime = Date.now() / 1000; // to get in milliseconds\r\n    if (decoded.exp < currentTime) {\r\n      // Logout user\r\n      store.dispatch(logoutUser());\r\n      // Redirect to login\r\n      window.location.href = \"./login\";\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Provider store={store}>\r\n      <Router>\r\n        <div className=\"App\">\r\n          <div className=\"row h-100\">\r\n            <div className=\"nav-container pr-0 position-relative\">\r\n              <Header className=\"header h-100 position-fixed\" />\r\n            </div>\r\n            <div className=\"body-container pl-0 h-100 display-flex p-3\">\r\n              <div className=\"h-100 w-100 mobile-layout-fix\">\r\n                <Route exact path=\"/\" component={Landing} />\r\n                <Route exact path=\"/register\" component={Register} />\r\n                <Route exact path=\"/login\" component={Login} />\r\n                <Switch>\r\n                  <PrivateRoute exact path=\"/dashboard\" component={Dashboard} />\r\n                  <PrivateRoute exact path=\"/todos\" component={Todos} />\r\n                  <PrivateRoute exact path=\"/profile\" component={Profile} />\r\n                </Switch>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <Footer />\r\n        </div>\r\n      </Router>\r\n    </Provider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport { Provider } from 'react-redux'\r\nimport store from './store/store.js';\r\nimport './App.scss';\r\n\r\nReactDOM.render(\r\n<Provider store={store}>\r\n  <App />\r\n</Provider>, \r\ndocument.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}